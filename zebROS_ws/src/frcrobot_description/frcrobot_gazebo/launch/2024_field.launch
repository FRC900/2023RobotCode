<?xml version="1.0"?>

<launch>
	<arg name="sim_joystick" default="true" />
	<arg name="sim_button_box" default="true"/>
  <!-- Add a few params which tells gazebo which sim interfaces to load
	   and, in each of the namespaces of those interfaces, their types
	-->
  <rosparam file="$(find frcrobot_gazebo)/config/robots.yaml" command="load"/>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find frcrobot_gazebo)/worlds/2024_field.world"/>
    <arg name="verbose" value="True" />
    <!-- more default parameters can be changed here -->
  </include>

  <!-- process the xacro file into a urdf, load the text of that urdf into a ros 
	   string parameter. This is used by gazebo to build its robot model
	-->
  <!-- <param name="robot_description" command="$(find xacro)/xacro $(find frcrobot_description)/urdf/2024_field.urdf" /> -->

  <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-z 0.2 -param robot_description -urdf -model robot" output="screen" /> -->

  <!-- 
  <include file="$(find controller_node)/launch/joysticks_sim.launch">
    <arg name="sim_joystick" value="$(arg sim_joystick)"/>
    <arg name="sim_button_box" value="$(arg sim_button_box)"/>
  </include>
  
  <group ns="teleop">
    <rosparam file="$(find teleop_joystick_control)/config/teleop_joystick_comp_2023.yaml" command="load"/>
    <node name="teleop_joystick_comp" pkg="teleop_joystick_control" type="teleop_joystick_comp" output="screen" >
    </node>

  </group>
  <group ns="cmd_vel_mux">
    <node name="twist_mux" pkg="twist_mux" type="twist_mux">
      <rosparam command="load" file="$(find talon_swerve_drive_controller)/config/twist_mux.yaml"/>
      <remap from="cmd_vel_out" to="/frcrobot_jetson/swerve_drive_controller/cmd_vel"/>
    </node> 
  </group>
  -->
</launch>
