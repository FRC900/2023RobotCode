# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
generic_hw_control_loop:
  loop_hz: 250
  cycle_time_error_threshold: 0.01
  canifier_read_hz: 100
  cancoder_read_hz: 100
  #some processes have lower frequencies than the main control loop
  ctre_mc_read_hz: 100
  talonfxpro_read_hz: 50
  pigeon2_read_hz: 100
  pcm_read_hz: 20
  pdh_read_hz: 20
  pdp_read_hz: 20
  ph_read_hz: 20
  robot_iteration_hz: 20
  spark_max_read_hz: 100
  joystick_read_hz: 50
  match_data_read_hz: 2
  robot_controller_read_hz: 20
  as726x_read_hz: 7

  talon_config_count_limit: 10


# Settings for ros_control hardware interface
# Map a name for each valid joint to a CAN id
# For future expansion, change hw_id to specify one
# of several types of HW interface : CAN_id, PWM_id, DIO_id, AIO_id, etc.
hardware_interface:
   # Identify this as a non-Rio controller using Linux
   # socketCan device can0 to communicate
   run_hal_robot: false
   can_interface: can0

   joints:
       # Swerve drive
       - {name: fl_drive, type: talonfxpro, can_bus: CANivore, can_id: 21, local: true}
       - {name: fl_angle, type: talonfxpro, can_bus: CANivore, can_id: 11, local: true}
       - {name: fr_drive, type: talonfxpro, can_bus: CANivore, can_id: 22, local: true}
       - {name: fr_angle, type: talonfxpro, can_bus: CANivore, can_id: 12, local: true}
       - {name: br_drive, type: talonfxpro, can_bus: CANivore, can_id: 24, local: true}
       - {name: br_angle, type: talonfxpro, can_bus: CANivore, can_id: 14, local: true}
       - {name: bl_drive, type: talonfxpro, can_bus: CANivore, can_id: 23, local: true}
       - {name: bl_angle, type: talonfxpro, can_bus: CANivore, can_id: 13, local: true}
     
       - {name: fl_cancoder, type: cancoder, can_bus: CANivore, can_id: 11, local: true}
       - {name: fr_cancoder, type: cancoder, can_bus: CANivore, can_id: 12, local: true}
       - {name: br_cancoder, type: cancoder, can_bus: CANivore, can_id: 14, local: true}
       - {name: bl_cancoder, type: cancoder, can_bus: CANivore, can_id: 13, local: true}
       #intake
       - {name: intake, type: talonfxpro, can_bus: CANivore, can_id: 15, local: true}
       
       #arm
       - {name: arm, type: talonfxpro, can_bus: CANivore, can_id: 31, local: true}
       - {name: arm, type: cancoder, can_bus: CANivore, can_id: 31, local: true}

       #climb
       #- {name: climb_leader, type: talonfxpro, can_bus: CANivore, can_id: 41, local: true}
       #- {name: climb_follower, type: talonfxpro, can_bus: CANivore, can_id: 42, local: true}

       #shooter
       - {name: top_left_shooter_joint, type: talonfxpro, can_bus: CANivore, can_id: 51, local: true}
       - {name: top_right_shooter_joint, type: talonfxpro, can_bus: CANivore, can_id: 52, local: true}
       - {name: bottom_left_shooter_joint, type: talonfxpro, can_bus: CANivore, can_id: 53, local: true}
       - {name: bottom_right_shooter_joint, type: talonfxpro, can_bus: CANivore, can_id: 54, local: true}
       - {name: shooter_pivot_motionmagic_joint, type: talonfxpro, can_bus: CANivore, can_id: 55, local: true}
       - {name: shooter_pivot_cancoder, type: cancoder, can_bus: CANivore, can_id: 55, local: true}

       #Claw/Diverter
       # TODO - see if these need to be merged?
       - {name: note_diverter, type: talonfxpro, can_bus: CANivore, can_id: 17, local: true}
    #    - {name: clawster, type: can_talon_srx, can_bus: slowbro, can_id: 16, local: true} # may need to change can_bus to slowbro

    #    - {name: claw_limit_switch, type: digital_input, local: false}
       - {name: diverter_limit_switch, type: digital_input, local: false}
       - {name: preshooter_limit_switch, type: digital_input, local: false}
       
       #- {name: pcm, type: pcm, pcm_id: 0}
       - {name: pigeon2, type: pigeon2, frame_id: pigeon2_frame, can_bus: CANivore, can_id: 0, local: true}

       #- {name: candle1, can_id: 0, can_bus: CANivore, type: candle, local: true}

       #- {name: babys_first_orchestra, type: orchestra, id: 1}

       - {name: robot_code_ready_jetson, local: true, type: ready}
       - {name: robot_code_ready_rio, local: false, type: ready} # Probably not really needed?

        #  taken out
       - {name: latency_compensation, type: latency_compensation, update_frequency: 250, entries: [ {name: fl_drive, type: talonfx}, {name: fl_angle, type: talonfx}, {name: fr_drive, type: talonfx}, {name: fr_angle, type: talonfx}, {name: br_drive, type: talonfx}, {name: br_angle, type: talonfx}, {name: bl_drive, type: talonfx}, {name: bl_angle, type: talonfx}, {name: pigeon2, type: pigeon2_yaw}] }

# Create controllers for each joint
#
# Entry is the name of the controller. It can be anything.
# It will create a namespace with that name under the main
# controller namespace. Subscribed topics for that controller
# will be most often show up under
# <top level controller manager ns>/<controller ns>/topic
# e.g.
# /frcrobot/joint1_talon_controller/command
# /frcrobot/joint2_talon_controller/command
# /frcrobot/talon_states

intake_talonfxpro_controller:
    type: talonfxpro_controllers/TalonFXProDutyCycleOutController
    joint: intake
    invert: counterclockwise_positive
    # dynamic_reconfigure: True
    neutral_mode: Coast

note_diverter_controller:
    type: talonfxpro_controllers/TalonFXProVoltageOutputController
    joint: note_diverter
    invert: clockwise_positive
    # dynamic_reconfigure: True
    neutral_mode: Coast

clawster_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: clawster
    invert_output: True
    voltage_compensation_Enable: True
    voltage_compensation_saturation: 10
    neutral_mode: Brake
    dynamic_reconfigure: False
    enable_read_thread: False

top_left_shooter_controller:
   type: talonfxpro_controllers/TalonFXProVelocityVoltageController
   joint: top_left_shooter_joint
   invert: clockwise_positive
   close_loop_values:
      - {kP: 0.3, kI: 0.0, kD: 0.0, kV: 0.0805, kS: 0.0}
   #current_limit_continuous_amps: 15
   #current_limit_peak_amps: 25
   #current_limit_peak_msec: 50
   #current_limit_enable: True
   peak_reverse_voltage: 0
   sensor_to_mechanism_ratio: 0.6923076923076923
   # voltage_closed_loop_ramp_period: 0.10
#    dynamic_reconfigure: True
   neutral_mode: Coast
   forward_limit_enable: False
   reverse_limit_enable: False

top_right_shooter_controller:
   type: talonfxpro_controllers/TalonFXProVelocityVoltageController
   joint: top_right_shooter_joint
   #invert: clockwise_positive
   close_loop_values:
      - {kP: 0.3, kI: 0.0, kD: 0.0, kV: 0.08, kS: 0.0}
   #current_limit_continuous_amps: 15
   #current_limit_peak_amps: 25
   #current_limit_peak_msec: 50
   #current_limit_enable: True
   peak_reverse_voltage: 0
   sensor_to_mechanism_ratio: 0.6923076923076923
   # voltage_closed_loop_ramp_period: 0.10
#    dynamic_reconfigure: True
   neutral_mode: Coast
   forward_limit_enable: False
   reverse_limit_enable: False

bottom_left_shooter_controller:
   type: talonfxpro_controllers/TalonFXProVelocityVoltageController
   joint: bottom_left_shooter_joint
   #invert: clockwise_positive
   close_loop_values:
      - {kP: 0.3, kI: 0.0, kD: 0.0, kV: 0.0805, kS: 0.0}
   #current_limit_continuous_amps: 15
   #current_limit_peak_amps: 25
   #current_limit_peak_msec: 50
   #current_limit_enable: True
   peak_reverse_voltage: 0
   sensor_to_mechanism_ratio: 0.6923076923076923
   # voltage_closed_loop_ramp_period: 0.10
#    dynamic_reconfigure: True
   neutral_mode: Coast
   forward_limit_enable: False
   reverse_limit_enable: False


bottom_right_shooter_controller:
   type: talonfxpro_controllers/TalonFXProVelocityVoltageController
   joint: bottom_right_shooter_joint
   invert: clockwise_positive
   close_loop_values:
      - {kP: 0.3, kI: 0.0, kD: 0.0, kV: 0.0805, kS: 0.0}
   #current_limit_continuous_amps: 15
   #current_limit_peak_amps: 25
   #current_limit_peak_msec: 50
   #current_limit_enable: True
   peak_reverse_voltage: 0
   sensor_to_mechanism_ratio: 0.6923076923076923
   # voltage_closed_loop_ramp_period: 0.10
#    dynamic_reconfigure: True
   neutral_mode: Coast
   forward_limit_enable: False
   reverse_limit_enable: False
   
shooter_pivot_controller:
    type: shooter_pivot_controller_2024/ShooterPivotController_2024

    feed_forward_map:
        #- [0.5338253141842031, -0.16]
        #- [0.5583690067903734, 0.21]
        #- [0.6227961998815703, 0.03]
        #- [0.6933593161243098, -0.23]
        #- [0.7424467013366504, -0.24]
        #- [0.782330201821677, -0.09]
        #- [0.8436894333371027, -0.2]
        #- [0.8835729338221293, -0.09]
        #- [0.9295923574586985, -0.08]
        #- [0.9909515889741242, -0.23]

        # second map
        #- [0.48473792897186263, 0.0]
        #- [0.5553010452146021, 0.08]
        #- [0.619728238305799, -0.24]
        #- [0.6350680461846554, 0.14]
        #- [0.6902913545485385, -0.09]
        #- [0.7485826244881929, -0.21]
        #- [0.7946020481247621, -0.07]
        #- [0.8498253564886452, -0.18]
        #- [0.9111845880040709, -0.23]
        #- [0.9541360500648688, -0.21]
        #- [1.57, 0.0]

        - [0.4387185053352934, 0.6]
        - [0.49394181369917645, 0.58]
        - [0.500077736850719, 0.55]
        - [0.5460971604872883, 0.58]
        - [0.5951845456996288, 0.53]
        - [0.6473398924877406, 0.48]
        - [0.6964272777000811, 0.48]
        - [0.7485826244881929, 0.45]
        - [0.7976700097005334, 0.44]
        - [0.8467573949128739, 0.43]
        - [0.8958447801252144, 0.42]
        - [0.944932165337555, 0.39]
        - [0.9909515889741242, 0.38]
        - [1.043106935762236, 0.35000000000000003]
        - [1.0891263593988052, 0.34]
        - [1.1290098598838318, 0.38]
        - [1.184233168247715, 0.32]
        - [1.2241166687327416, 0.36]
        - [1.2793399770966247, 0.28]
        - [1.325359400733194, 0.3]
        - [1.368310862793992, 0.31]
        - [1.4173982480063325, 0.28]



    shooter_pivot_joint: [ 'shooter_pivot_motionmagic_joint' ]
    dynamic_reconfigure: True
    min_angle: 0.45
    max_angle: 1.5

    motion_magic_velocity: 3.5
    motion_magic_acceleration: 7.0
    motion_magic_jerk: 100.0

    shooter_pivot_motionmagic_joint:
        type: talonfxpro_controllers/TalonFXProControllerInterface
        joint: shooter_pivot_motionmagic_joint
        feedback_sensor_source: FusedCANcoder
        remote_feedback_device_id0: 55
        motion_magic_cruise_velocity: 3.5
        motion_magic_acceleration: 7.0
        motion_magic_jerk: 100.0
        sensor_to_mechanism_ratio: 1.0
        rotor_to_sensor_ratio: 35.56
        softlimit_forward_enable: False
        softlimit_forward_threshold: 1.66
        softlimit_reverse_enable: False
        softlimit_reverse_threshold: 0.4
        neutral_mode: Brake
        close_loop_values:
            # Tried kI of around 12, it did help but was very slow and higher caused a bit of windup
            - {kP: 30.0, kI: 0.0, kD: 1.0, kV: 6.0, kS: 0.0, kG: 0.0, gravity_type: "arm_cosine"}
        dynamic_reconfigure: True

cancoder_state_controller:
    type:     cancoder_state_controller/CANCoderStateController
    publish_rate: 100


# This one creates the /talon_states topic necessary in ROS
# It doesn't actually control anything, just takes the internal
# encoder state used by the hw manager and publishes it as
# a ROS topic.  This is generic ROS stuff, so we'll have
# to figure out what to map e.g. effort to in the Talon world
talon_state_controller_jetson:
   type:         talon_state_controller/TalonStateController
   publish_rate: 100
talon_config_controller:
   type:         talon_config_controller/TalonConfigController
   publish_rate: 5

talonfxpro_state_controller:
   type:         talonfxpro_state_controller/TalonFXProStateController
   publish_rate: 100
talonfxpro_config_controller:
   type:         talonfxpro_config_controller/TalonFXProConfigController
   publish_rate: 5

# Similar to above, but this one prints non-Talon state
# (stuff that fits into the more standard ROS position/
# speed/effort paradigm)
joint_state_controller_jetson:
   type:         joint_state_controller/JointStateController
   publish_rate: 100

# Used to listen for remote joint states published from the given topic
# (in this case the Rio) and copy them to internal copies of
# joint data
joint_state_listener_controller_jetson:
    type:      state_listener_controller/JointStateListenerController
    topic:     /frcrobot_rio/joint_states

pcm_state_controller:
   type:         pcm_state_controller/PCMStateController
   publish_rate: 20

match_state_listener_controller:
    type:      state_listener_controller/MatchStateListenerController
    topic:     /frcrobot_rio/match_data

orchestra_controller:
    type:      orchestra_controller/OrchestraController

orchestra_state_controller:
    type:   orchestra_state_controller/OrchestraStateController
    publish_rate: 10

pigeon2_state_controller:
    type: pigeon2_state_controller/Pigeon2StateController
    publish_rate: 100
    joint_name: pigeon2
    compass_enable: false

pigeon2_controller:
    type: pigeon2_controller/Pigeon2Controller
    publish_rate: 20
    joint_name: pigeon2

pigeon2_imu_state_controller:
    type: imu_sensor_controller/ImuSensorController
    joint_name: pigeon2
    publish_rate: 100

candle_controller:
    type: candle_controller/CANdleController
    name: candle1

latency_compensation_state_controller:
  type: latency_compensation_state_controller/LatencyCompensationStateController
  publish_rate: 250

arm_controller:
    type: talonfxpro_controllers/TalonFXProMotionMagicVoltageController
    joint: arm
    # DONT SET THIS FOR SIM !!! 
    #feedback_sensor_source: RemoteCANcoder
    #remote_feedback_device_id0: 21
    #neutral_deadband: 0.01
    close_loop_values:
        - {kP: 1, kI: 0.000, kD: 0.0, kV: 0, kS: 0}
    invert: counterclockwise_positive
    neutral_deadband: 0.01
    motion_magic_cruise_velocity: 0.1
    motion_magic_acceleration: .1
    motion_magic_jerk: 350.0
    forward_limit_enable: False
    reverse_limit_enable: False
    dynamic_reconfigure: True
