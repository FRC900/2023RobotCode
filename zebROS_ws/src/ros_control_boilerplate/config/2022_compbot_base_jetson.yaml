# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
generic_hw_control_loop:
  loop_hz: 250
  cycle_time_error_threshold: 0.004
  canifier_read_hz: 100
  cancoder_read_hz: 250
  #some processes have lower frequencies than the main control loop
  ctre_mc_read_hz: 250
  pcm_read_hz: 20
  pdh_read_hz: 20
  pdp_read_hz: 20
  ph_read_hz: 20
  robot_iteration_hz: 20
  spark_max_read_hz: 100
  joystick_read_hz: 50
  match_data_read_hz: 2
  robot_controller_read_hz: 20
  as726x_read_hz: 7


# Settings for ros_control hardware interface
# Map a name for each valid joint to a CAN id
# For future expansion, change hw_id to specify one
# of several types of HW interface : CAN_id, PWM_id, DIO_id, AIO_id, etc.
hardware_interface:
   # Identify this as a non-Rio controller using Linux
   # socketCan device can0 to communicate
   run_hal_robot: false
   can_interface: can0

   joints:
       #- {name: climber_dynamic_arm_solenoid_joint, type: double_solenoid, module_type: ctrepcm, local_hardware: false, local_update: true}
       #- {name: climber_static_hook_solenoid_joint, type: double_solenoid, module_type: ctrepcm, local_hardware: false, local_update: true}
         #- {name: climber_dynamic1_limit_switch, type: digital_input, local: false}
         #- {name: climber_dynamic2_limit_switch, type: digital_input, local: false}
       #- {name: climber_static1_limit_switch, type: digital_input, local: false}
       #- {name: climber_static2_limit_switch, type: digital_input, local: false}
       #- {name: climber_dynamic_arm_leader, type: can_talon_fx, can_bus: CANivore, can_id: 30, local: true}
       #- {name: climber_dynamic_arm_follower, type: can_talon_fx, can_bus: CANivore, can_id: 31, local: true}

       - {name: shooter_leader, type: can_talon_fx, can_bus: CANivore, can_id: 40, local: true}
       - {name: shooter_follower, type: can_talon_fx, can_bus: CANivore, can_id: 41, local: true}
       - {name: hood_shooter, type: can_talon_fx, can_bus: CANivore, can_id: 42, local: true}
       - {name: shooter_downtown_solenoid_joint, type: solenoid, local_hardware: false, local_update: true}

       - {name: intake_motor, type: can_talon_fx, can_bus: CANivore, can_id: 60, local: true}
       - {name: intake_solenoid, type: solenoid, local_hardware: false, local_update: true}

       - {name: indexer_straight_motor, type: can_talon_fx, can_bus: CANivore, can_id: 50, local: true}
       - {name: indexer_arc_motor, type: can_talon_fx, can_bus: CANivore, can_id: 51, local: true}
       - {name: indexer_straight_linebreak, type: digital_input, local: false}
       - {name: indexer_arc_linebreak, type: digital_input, local: false}

       - {name: fl_drive, type: can_talon_fx, can_bus: CANivore, can_id: 21, local: true}
       - {name: fl_angle, type: can_talon_fx, can_bus: CANivore, can_id: 11, local: true}
       - {name: fr_drive, type: can_talon_fx, can_bus: CANivore, can_id: 22, local: true}
       - {name: fr_angle, type: can_talon_fx, can_bus: CANivore, can_id: 12, local: true}
       - {name: br_drive, type: can_talon_fx, can_bus: CANivore, can_id: 24, local: true}
       - {name: br_angle, type: can_talon_fx, can_bus: CANivore, can_id: 14, local: true}
       - {name: bl_drive, type: can_talon_fx, can_bus: CANivore, can_id: 23, local: true}
       - {name: bl_angle, type: can_talon_fx, can_bus: CANivore, can_id: 13, local: true}
         #- {name: bl_angle_encoder, type: can_talon_srx, can_id: 3, local: true}
       # - {name: pcm, type: pcm, pcm_id: 0}

       - {name: robot_code_ready_jetson, local: true, type: ready}
       - {name: robot_code_ready_rio, local: false, type: ready} # Probably not really needed?

       - {name: babys_first_orchestra, type: orchestra, id: 1}

# Create controllers for each joint
#
# Entry is the name of the controller. It can be anything.
# It will create a namespace with that name under the main
# controller namespace. Subscribed topics for that controller
# will be most often show up under
# <top level controller manager ns>/<controller ns>/topic
# e.g.
# /frcrobot/joint1_talon_controller/command
# /frcrobot/joint2_talon_controller/command
# /frcrobot/talon_states

#Set up controllers for main robot mechanisms
dynamic_arm_solenoid_controller:
  type: position_controllers/JointPositionController
  joint: climber_dynamic_arm_solenoid_joint

static_hook_solenoid_controller:
  type: position_controllers/JointPositionController
  joint: climber_static_hook_solenoid_joint

downtown_solenoid_controller:
  type: position_controllers/JointPositionController
  joint: shooter_downtown_solenoid_joint

dynamic_arm_controller:
  type: dynamic_arm_controller/DynamicArmController
  dynamic_arm_joint: ['dynamic_arm_leader', 'dynamic_arm_follower']

  dynamic_arm_zeroing_percent_output: -0.2 # TODO : tune me
  # If there are no negative velocity readings while zeroing
  # for this amount of time, assume the dynamic arm is stuck
  # or has hit bottom and the limit switch is broken.  Stop
  # trying to drive down to prevent killing the motor
  dynamic_arm_zeroing_timeout: 60.0

  # TODO fix these
  dynamic_arm_max_current_iterations: 10
  dynamic_arm_current_threshold: 10.0

  # extending
  motion_magic_velocity_veryfast: 0.8 # was 1.0, slowing down for first few matches
  motion_magic_acceleration_veryfast: 2.0

  # retracting
  motion_magic_velocity_fast: 0.20 # was 0.42, slowing down for first few matches
  motion_magic_acceleration_fast: 1.0

  # retracting from ground to mid
  motion_magic_velocity_ground_to_mid: 0.36 # was 0.42, slowing down for first few matches
  motion_magic_acceleration_ground_to_mid: 1.0

  # retracting to traversal
  motion_magic_velocity_traversal: 0.13 # was 0.3
  motion_magic_acceleration_traversal: 1.0

  # dynamic hooks -> static hooks
  motion_magic_velocity_slow: 0.1
  motion_magic_acceleration_slow: 1.0

  dynamic_arm_leader:
    type: talon_controllers/TalonControllerInterface
    joint: climber_dynamic_arm_leader
    close_loop_values:
        - {p: 0.05, i: 0, d: 0.5, f: 0.055, i_zone: 0}

    invert_output: False

    feedback_type: IntegratedSensor

    # TODO : bottom limit switch config
    limit_switch_local_reverse_source: "FeedbackConnector"
    limit_switch_local_reverse_normal: "NormallyOpen"

    # TODO Change this for 2022, this is from 2019
    # softlimit_forward_threshold: 1.5 #1.66755
    # softlimit_forward_enable: False

    voltage_compensation_enable: True
    voltage_compensation_saturation: 12

    conversion_factor: 0.00108
    #neutral_deadband: 0.001
    neutral_mode: Brake

    dynamic_reconfigure: False
    motion_s_curve_strength: 0

    #status_1_general_period: 10
    #status_2_feedback0_period: 20
    status_3_quadrature_period: 250
    #status_4_aintempvbat_period: 160
    #status_6_misc_period: 0
    #status_7_commstatus_period: 0
    status_8_pulsewidth_period: 250
    status_9_motprofbuffer_period: 250
    #status_10_motionmagic_period: 160
    #status_11_uartgadgeteer_period: 250
    #status_12_feedback1_period: 250
    #status_13_base_pidf0_period: 160
    #status_14_turn_pidf1_period: 250
    status_15_firmwareapistatus_period: 250
    #status_17_brushless_current_period: 50

  dynamic_arm_follower:
    joint: climber_dynamic_arm_follower
    invert_output: True
    neutral_mode: Brake
    dynamic_reconfigure: False
    voltage_compensation_enable: True
    voltage_compensation_saturation: 12
    status_1_general_period: 250 # default = 10
    status_2_feedback0_period: 250 # Default = 20
    status_3_quadrature_period: 250
    #status_4_aintempvbat_period: 160
    #status_6_misc_period: 0
    #status_7_commstatus_period: 0
    status_8_pulsewidth_period: 250
    status_9_motprofbuffer_period: 250
    status_10_motionmagic_period: 250
    #status_11_uartgadgeteer_period: 250
    #status_12_feedback1_period: 250
    #status_13_base_pidf0_period: 160
    #status_14_turn_pidf1_period: 250
    status_15_firmwareapistatus_period: 250
    #status_17_brushless_current_period: 50

hood_shooter_controller:
  joint: hood_shooter
  type: talon_controllers/TalonVelocityCloseLoopController
  feedback_type: IntegratedSensor
  close_loop_values:
      - {p: 0.5, i: 0.00, d: 0.0, f: 0.065, i_zone: 0}
  invert_output: false 
  sensor_phase: false
  peak_output_forward: 1.0
  peak_output_reverse: 0.0
  nominal_output_forward: 0.0
  nominal_output_reverse: 0.0
  voltage_compensation_enable: true
  voltage_compensation_saturation: 12
  dynamic_reconfigure: True
  neutral_mode: Coast
  #closed_loop_ramp: 0.1
  neutral_deadband: 0.01
  velocity_measurement_period: Period_20Ms
  velocity_measurement_window: 4
  #status_1_general_period: 10
  #status_2_feedback0_period: 20
  status_3_quadrature_period: 250
  #status_4_aintempvbat_period: 160
  #status_6_misc_period: 0
  #status_7_commstatus_period: 0
  status_8_pulsewidth_period: 250
  status_9_motprofbuffer_period: 250
  status_10_motionmagic_period: 250
  #status_11_uartgadgeteer_period: 250
  #status_12_feedback1_period: 250
  #status_13_base_pidf0_period: 160
  #status_14_turn_pidf1_period: 250
  status_15_firmwareapistatus_period: 250
  #status_17_brushless_current_period: 50

shooter_controller:
  joint: shooter_leader
  type: talon_controllers/TalonVelocityCloseLoopController
  feedback_type: IntegratedSensor
  close_loop_values:
      - {p: 0.20, i: 0.000, d: 0.0, f: 0.046, i_zone: 0}
  invert_output: true
  sensor_phase: false
  peak_output_forward: 1.0
  peak_output_reverse: 0.0
  nominal_output_forward: 0.0
  nominal_output_reverse: 0.0
  voltage_compensation_enable: true
  voltage_compensation_saturation: 12
  dynamic_reconfigure: False
  neutral_mode: Coast
  neutral_deadband: 0.01
  velocity_measurement_period: Period_20Ms
  velocity_measurement_window: 4
  #status_1_general_period: 10
  #status_2_feedback0_period: 20
  status_3_quadrature_period: 250
  #status_4_aintempvbat_period: 160
  #status_6_misc_period: 0
  #status_7_commstatus_period: 0
  status_8_pulsewidth_period: 250
  status_9_motprofbuffer_period: 250
  status_10_motionmagic_period: 250
  #status_11_uartgadgeteer_period: 250
  #status_12_feedback1_period: 250
  #status_13_base_pidf0_period: 160
  #status_14_turn_pidf1_period: 250
  status_15_firmwareapistatus_period: 250
  #status_17_brushless_current_period: 50

shooter_follower_controller:
  type: talon_controllers/TalonFollowerController
  joint: shooter_follower
  feedback_type: IntegratedSensor
  invert_output: False
  follow_joint: shooter_leader
  enable_read_thread: False
  neutral_deadband: 0.01
  voltage_compensation_enable: True
  voltage_compensation_saturation: 12
  status_1_general_period: 250 # Default = 10
  status_2_feedback0_period: 250 # Default = 20
  status_3_quadrature_period: 250
  #status_4_aintempvbat_period: 160
  #status_6_misc_period: 0
  #status_7_commstatus_period: 0
  status_8_pulsewidth_period: 250
  status_9_motprofbuffer_period: 250
  status_10_motionmagic_period: 250
  #status_11_uartgadgeteer_period: 250
  #status_12_feedback1_period: 250
  status_13_base_pidf0_period: 250
  #status_14_turn_pidf1_period: 250
  status_15_firmwareapistatus_period: 250
  #status_17_brushless_current_period: 50

intake_controller:
  type: intake_controller/IntakeController
  intake_joint: intake_motor

  intake_motor:
      type: talon_controllers/TalonPercentOutputController
      joint: intake_motor
      invert_output: False
      voltage_compensation_enable: True
      voltage_compensation_saturation: 12
      dynamic_reconfigure: false
      status_1_general_period: 100 # Default = 10
      status_2_feedback0_period: 100 # Default = 20
      status_3_quadrature_period: 250
      #status_4_aintempvbat_period: 160
      #status_6_misc_period: 0
      #status_7_commstatus_period: 0
      status_8_pulsewidth_period: 250
      status_9_motprofbuffer_period: 250
      status_10_motionmagic_period: 250
      #status_11_uartgadgeteer_period: 250
      #status_12_feedback1_period: 250
      status_13_base_pidf0_period: 250
      #status_14_turn_pidf1_period: 250
      status_15_firmwareapistatus_period: 250
      #status_17_brushless_current_period: 50

# This one creates the /talon_states topic necessary in ROS
# It doesn't actually control anything, just takes the internal
# encoder state used by the hw manager and publishes it as
# a ROS topic.  This is generic ROS stuff, so we'll have
# to figure out what to map e.g. effort to in the Talon world
talon_state_controller_jetson:
   type:         talon_state_controller/TalonStateController
   publish_rate: 250
talon_config_controller:
   type:         talon_config_controller/TalonConfigController
   publish_rate: 5

# Similar to above, but this one prints non-Talon state
# (stuff that fits into the more standard ROS position/
# speed/effort paradigm)
joint_state_controller_jetson:
   type:         joint_state_controller/JointStateController
   publish_rate: 100

# Used to listen for remote joint states published from the given topic
# (in this case the Rio) and copy them to internal copies of
# joint data
joint_state_listener_controller:
    type:      state_listener_controller/JointStateListenerController
    topic:     /frcrobot_rio/joint_states

pcm_state_controller:
   type:         pcm_state_controller/PCMStateController
   publish_rate: 20

match_state_listener_controller:
    type:      state_listener_controller/MatchStateListenerController
    topic:     /frcrobot_rio/match_data

orchestra_controller:
    type:      orchestra_controller/OrchestraController

orchestra_state_controller:
    type:   orchestra_state_controller/OrchestraStateController
    publish_rate: 10

indexer_straight_motor_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: indexer_straight_motor
    invert_output: true
    feedback_type: IntegratedSensor
    dynamic_reconfigure: True
    voltage_compensation_Enable: True
    voltage_compensation_saturation: 12
    neutral_mode: Brake
    status_1_general_period: 100 # Default = 10
    status_2_feedback0_period: 100 # Default = 20
    status_3_quadrature_period: 250
    #status_4_aintempvbat_period: 160
    #status_6_misc_period: 0
    #status_7_commstatus_period: 0
    status_8_pulsewidth_period: 250
    status_9_motprofbuffer_period: 250
    status_10_motionmagic_period: 250
    #status_11_uartgadgeteer_period: 250
    #status_12_feedback1_period: 250
    status_13_base_pidf0_period: 250
    #status_14_turn_pidf1_period: 250
    status_15_firmwareapistatus_period: 250
    #status_17_brushless_current_period: 50

indexer_arc_motor_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: indexer_arc_motor
    invert_output: false
    feedback_type: IntegratedSensor
    dynamic_reconfigure: True
    voltage_compensation_Enable: True
    voltage_compensation_saturation: 12
    neutral_mode: Brake
    status_1_general_period: 100 # Default = 10
    status_2_feedback0_period: 100 # Default = 20
    status_3_quadrature_period: 250
    #status_4_aintempvbat_period: 160
    #status_6_misc_period: 0
    #status_7_commstatus_period: 0
    status_8_pulsewidth_period: 250
    status_9_motprofbuffer_period: 250
    status_10_motionmagic_period: 250
    #status_11_uartgadgeteer_period: 250
    #status_12_feedback1_period: 250
    status_13_base_pidf0_period: 250
    #status_14_turn_pidf1_period: 250
    status_15_firmwareapistatus_period: 250
    #status_17_brushless_current_period: 50

climber_motion_magic_controller:
    type: talon_controllers/TalonMotionMagicCloseLoopController
    joint: climber_dynamic_arm_leader
    feedback_type: IntegratedSensor
    close_loop_values:
        - {p: 0.05, i: 0, d: 0.5, f: 0.055, i_zone: 0}
    invert_output: False
    nominal_output_forward: 0.0
    nominal_output_reverse: 0.0
    motion_cruise_velocity: 0.25
    motion_acceleration: 2
    voltage_compensation_enable: true
    voltage_compensation_saturation: 12
    dynamic_reconfigure: true
    motion_s_curve_strength: 0
    conversion_factor: 0.00108
    clear_position_on_limit_r: True
    neutral_mode: Brake

climber_follower_controller:
  type: talon_controllers/TalonFollowerController
  joint: climber_dynamic_arm_follower
  feedback_type: IntegratedSensor
  invert_output: True
  follow_joint: climber_dynamic_arm_leader
  clear_position_on_limit_r: True
  neutral_mode: Brake
  voltage_compensation_enable: true
  voltage_compensation_saturation: 12


bl_angle_encoder_controller:
    type: talon_controllers/TalonPercentOutputController
    joint: bl_angle_encoder
    feedback_type: CTRE_MagEncoder_Absolute
    sensor_initialization_strategy: BootToAbsolutePosition
    ticks_per_rotation: 4096
    dynamic_reconfigure: False
    status_1_general_period: 100 # Default = 10
    #status_2_feedback0_period: 100 # Default = 20
    status_3_quadrature_period: 250
    #status_4_aintempvbat_period: 160
    #status_6_misc_period: 0
    #status_7_commstatus_period: 0
    status_8_pulsewidth_period: 250
    status_9_motprofbuffer_period: 250
    status_10_motionmagic_period: 250
    #status_11_uartgadgeteer_period: 250
    #status_12_feedback1_period: 250
    status_13_base_pidf0_period: 250
    #status_14_turn_pidf1_period: 250
    status_15_firmwareapistatus_period: 250
    #status_17_brushless_current_period: 50
