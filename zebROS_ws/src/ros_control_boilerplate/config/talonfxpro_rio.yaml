# ros_control_boilerplate Settings -----------------------
# Settings for ros_control control loop
generic_hw_control_loop:
  loop_hz: 100
  cycle_time_error_threshold: 0.01
  cycle_time_error_threshold: 0.01
  canifier_read_hz: 100
  cancoder_read_hz: 100
  #some processes have lower frequencies than the main control loop
  ctre_mc_read_hz: 100
  pcm_read_hz: 20
  pdh_read_hz: 20
  pdp_read_hz: 20
  ph_read_hz: 20
  robot_iteration_hz: 20
  spark_max_read_hz: 20
  joystick_read_hz: 50
  match_data_read_hz: 2
  robot_controller_read_hz: 20
  as726x_read_hz: 7
  pigeon2_read_hz: 100
  talonfxpro_read_hz: 100

# Settings for ros_control hardware interface
# Map a name for each valid joint to a CAN id
# For future expansion, change hw_id to specify one
# of several types of HW interface : CAN_id, PWM_id, DIO_id, AIO_id, etc.
hardware_interface:
   joints:
       # Add a single unused talon on the rio to make sure keepalive signals are sent
       #- {name: pdp, local: true, type: pdp }
       #- {name: pcm, local: true, type: pcm, pcm_id: 0}
       #- {name: as726x, local: true, type: as726x, port: mxp, address: 73 } # 73 = 0x49
       #- {name: do1, local: true, type: digital_output, dio_channel: 1}
       #- {name: do2, local_update: false, local_hardware: true, type: digital_output, dio_channel: 2}
       #- {name: joystick0, type: joystick, id: 0 }
       #- {name: button_box, type: joystick, id: 1, local: true}
       #- {name: green_led, local: true, type: digital_output, dio_channel: 4}

       - {name: solenoid, type: solenoid, module_type: ctrepcm, module_id: 0, channel: 0, local_hardware: true, local_update: false}
       - {name: double_solenoid, type: double_solenoid, module_type: ctrepcm, module_id: 0, forward_channel: 1, reverse_channel: 2, local_hardware: true, local_update: false}

       #- {name: ph_solenoid, type: solenoid, module_type: revph, module_id: 1, channel: 1, local_hardware: true, local_update: false}
       #- {name: ph_double_solenoid, type: double_solenoid, module_type: revph, module_id: 1, forward_channel: 2, reverse_channel: 3, local_hardware: true, local_update: false}

       #- {name: enable_only, type: talonfxpro, can_bus: CANivore, can_id: 1, local: false}
       #- {name: talonfxpro, type: talonfxpro, can_bus: CANivore, can_id: 1, local: true}
       - {name: rumble_test, type: rumble, port: 1, local: true}
       - {name: robot_code_ready_jetson, local: false, type: ready}
       - {name: robot_code_ready_rio, local: true, type: ready}

joint_state_controller:
   type:         joint_state_controller/JointStateController
   publish_rate: 100

joint_state_listener_controller:
    type:      state_listener_controller/JointStateListenerController
    topic:     /frcrobot_jetson/joint_states

button_box_controller:
    type: button_box_state_controller_2023/ButtonBoxStateController_2023
    name: button_box
    publish_rate: 50
       
joystick_controller:
    type: joystick_state_controller/JoystickStateController
    name: joystick0
    publish_rate: 50

match_state_controller:
   type:         match_state_controller/MatchStateController
   publish_rate: 20

robot_controller_state_controller:
   type: robot_controller_state_controller/RobotControllerStateController
   publish_rate: 20

rumble_state_controller:
    type: rumble_state_controller/RumbleStateController
    publish_rate: 5

rumble_controller:
    type: rumble_controller/RumbleController
    joint: rumble_test

talonfxpro_state_controller:
   type:         talonfxpro_state_controller/TalonFXProStateController
   publish_rate: 100
talonfxpro_config_controller:
   type:         talonfxpro_config_controller/TalonFXProConfigController
   publish_rate: 5
talonfxpro_controller:
    type: talonfxpro_controllers/TalonFXProDutyCycleOutController
    joint: talonfxpro
    dynamic_reconfigure: True