<?xml version="1.0"?>
<launch>
	<!-- GDB functionality -->
	<arg name="debug" default="false" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg     if="$(arg debug)" name="launch_prefix" value="gdb -ex run --args " />

	<arg name="hw_or_sim" default="hw" />
	<arg name="joy_or_key" default="joy" />
	<arg name="button_box" default="true"/>
	<arg name="record" default="false" />
	<arg name="primary_imu" default="PIGEON2" />

	<group ns="frcrobot_jetson">
		<rosparam file="$(find ros_control_boilerplate)/config/2024_compbot_base_jetson.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/2024_swerve_drive_phoenix6.yaml" command="load"/>
		<rosparam file="$(find ros_control_boilerplate)/config/2024_compbot_offsets.yaml" command="load"/>
			
		<!--
		<rosparam file="$(find ros_control_boilerplate)/config/2023_angle_swerve_tuning.yaml" command="load"/>
		-->
		
		<rosparam file="$(find ros_control_boilerplate)/config/robot_code_ready_controller_jetson.yaml" command="load"/>

		<!--
		<node name="zero_wheel_service" pkg="talon_swerve_drive_controller" type="zero_wheel_service" output="screen"> </node>
		-->

		<node name="dump_offsets_service" pkg="talon_swerve_drive_controller" type="dump_offsets_service" output="screen"> </node>

		<!-- Load hardware interface -->
		<node name="frcrobot_$(arg hw_or_sim)_interface" pkg="ros_control_boilerplate" type="frcrobot_$(arg hw_or_sim)_main"
			output="screen" launch-prefix="$(arg launch_prefix)">
		</node>

		<!-- Load controller manager-->
		<node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
			output="screen" args="spawn
			 swerve_drive_controller
			 swerve_drive_state_controller
			 joint_state_controller_jetson
			 joint_state_listener_controller_jetson
			 talon_state_controller_jetson
			 talon_config_controller
			 match_state_listener_controller
			 talonfxpro_state_controller
			 talonfxpro_config_controller
			 candle_controller
			 orchestra_controller
			 orchestra_state_controller
			 pigeon2_imu_state_controller
			 latency_compensation_state_controller
			 note_diverter_controller
			 note_conveyor_controller
			 claw_controller
			 robot_code_ready_controller" />
			 <!--
			-->

		<node name="uptime_jetson" pkg="uptime" type="uptime_node" output="screen" />

		<include file="$(find cpu_monitor)/launch/cpu_monitor.launch">
			<arg name="poll_period" value="5"/>
		</include>
	</group>

	<group ns="imu">
		<include file="$(find controller_node)/launch/2019_compbot_jetson_imu.launch">
			<arg name="hw_or_sim" value="$(arg hw_or_sim)" />
			<arg name="primary_imu" value="$(arg primary_imu)" />
		</include>
	</group>

	<group ns="robot_state">
		<param name="robot_description" command="$(find xacro)/xacro '$(find controller_node)/urdf/2024_compbot.xacro'" />
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	</group>

	<group ns="swerve_imu_ukf">
		<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imu" args="0 0 0 0 0 0 base_link imu" />
		<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_pigeon2" args="0 0 0 0 0.0096 0 base_link pigeon2_frame" />
		<!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tagslam_odom_to_base_link" args="0 0 0 0 0 0 frc_robot base_link" /> -->

		<!-- <include file="$(find controller_node)/launch/fuse_odom.launch"/> -->
	</group>

	<include file="$(find controller_node)/launch/teleop.launch">
		<arg name="year" value="2024" />
	</include>

	<group ns="cmd_vel_mux">
		<node name="twist_mux" pkg="twist_mux" type="twist_mux">
			<rosparam command="load" file="$(find talon_swerve_drive_controller)/config/2024_twist_mux.yaml"/>
			<remap from="cmd_vel_out" to="/frcrobot_jetson/swerve_drive_controller/cmd_vel"/>
		</node>
	</group>
	
	<!-- <include file="$(find controller_node)/launch/hold_position.launch"/> -->
	<include file="$(find controller_node)/launch/path_follower.launch"/>
	
	<!-- <include file="$(find controller_node)/launch/distance_to_pose.launch"/> -->
	<include file="$(find behaviors)/launch/auto_node.launch"/>

	<!-- Add 2024 actionlib servers here -->
	<include file="$(find behaviors)/launch/2024_diverter.launch"/>
	<include file="$(find behaviors)/launch/2024_claw.launch"/>
	
	<node name="candle_node" pkg="candle_node" type="candle_node" respawn="false" output="screen"/>

	<!-- Consider adding 2024 launch file for recording -->
	<include file="$(find controller_node)/launch/record_2024_compbot.launch" if="$(arg record)" />

	<!-- <include file="$(find controller_node)/launch/pf_localization.launch"/> -->
	
	<include file="$(find tf_object_detection)/launch/yolo_detection.launch">
		<arg name="input_type" value="live_camera" if="$(eval hw_or_sim == 'hw')"/>
		<!-- TODO : add camera position params here -->
	</include>

	<!-- 
	<group ns="wpilib_odom">
		<node name="odom_integrate_velocity_test" pkg="controller_node" type="odom_integrate_velocity_test.py"/>
	</group> 
	-->

	<!--  <include file="$(find controller_node)/launch/rosbridge_websocket.launch"> -->
</launch>
