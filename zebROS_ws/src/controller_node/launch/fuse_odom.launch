<?xml version="1.0"?>
<!-- node to fuse swerve odometry (x&y strafe) and IMU yaw data into
	 one single filtered odometry message

	 launch-prefix="gdb -ex run \-\-args"
-->

<launch>

	<node pkg="tf2_ros" type="static_transform_publisher" name="link_zedodomtoodom" args="0 0 0 0 0 0 1 zed_objdet_odom odom" />
	<node name="override_covariance_imu" pkg="controller_node" type="override_covariance.py" output="screen">
		<param name="topic" value="/imu/zeroed_imu"/>
		<param name="type" value="Imu"/>
		<param name="standard_deviation/x_rotation" value="0.005"/>
		<param name="standard_deviation/y_rotation" value="0.005"/>
		<param name="standard_deviation/z_rotation" value="0.005"/>
		<param name="standard_deviation/x_acceleration" value="0.2"/>
		<param name="standard_deviation/y_acceleration" value="0.2"/>
		<param name="standard_deviation/z_acceleration" value="0.2"/>
	</node>
	<node name="override_covariance_zed" pkg="controller_node" type="override_covariance.py" output="screen">
		<param name="topic" value="/zed_objdetect/odom"/>
		<param name="type" value="Odometry"/>
		<param name="standard_deviation/x" value="0.1"/>
		<param name="standard_deviation/y" value="0.1"/>
		<param name="standard_deviation/z" value="0.1"/>
		<param name="standard_deviation/x_rotation" value="10"/>
		<param name="standard_deviation/y_rotation" value="10"/>
		<param name="standard_deviation/z_rotation" value="10"/>
	</node>
	<node name="override_covariance_odom" pkg="controller_node" type="override_covariance.py" output="screen">
		<param name="topic" value="/frcrobot_jetson/swerve_drive_controller/odom"/>
		<param name="type" value="Odometry"/>
		<param name="standard_deviation/x" value="0.02"/>
		<param name="standard_deviation/y" value="0.02"/>
		<param name="standard_deviation/z" value="0.02"/>
		<param name="standard_deviation/x_rotation" value="10"/>
		<param name="standard_deviation/y_rotation" value="10"/>
		<param name="standard_deviation/z_rotation" value="10"/>
	</node>
	<node name="swerve_imu_ekf_node" pkg="robot_localization" type="ekf_localization_node" output="screen"> 
		<param name="cmd_vel" value="/frcrobot_jetson/swerve_drive_controller/cmd_vel_out"/>
		<param name="use_control" value="true"/>
		<rosparam param="control_config"> [true, true, true,
                                          false, false, false]</rosparam>

		<param name="frequency" value="250" />
		<param name="sensor_timeout" value="10000000.0" />
		<!-- 
			Change the frame parametrs when re-localization
			is implementated
			By default it looks like this node publishes 
			base_link <-> odom transform
		-->
		<param name="base_link_frame" value="base_link" />
		<param name="odom_frame" value="odom" />
		<param name="world_frame" value="odom" />

		<param name="two_d_mode" value="true" />
		<param name="publish_tf" value="false" />
		<param name="reset_on_time_jump" value="true" />

		<param name="smooth_lagged_data" value="false" />

		<param name="dynamic_process_noise_covariance" value="false" />

		<!--
			Sensor Configuration:
			x, y, z
			roll, pitch, yaw
			x-velocity, y-velocity, z-velocity
			roll-velocity, pitch-velocity, yaw-velocity
			x-acceleration, y-acceleration, z-acceleration
		-->
		<!--
			The covariance matricies must be set correctly
			or the state estimation node will be confused as to the correct
			source of information
		-->
		<!-- odom0 (wheel odom): x, y, z (z is always 0) -->
		<!-- Think about whether we want Z, roll, pitch - the robot shouldn't
			 have significant net motion in those directions 
			 (unless we are tipping over) and even so, do
			 we want to trust the navx data instead? -->
		<param name="odom0" value="/frcrobot_jetson/swerve_drive_controller/odom_overridden" />
		<rosparam param="odom0_config"> [true,  true,  false,
                                         false, false, false, 
                                         false, false, false,
                                         false, false, false,
                                         false, false, false]
        </rosparam>
		<param name="odom0_differential" value="true" />
		<param name="odom0_relative"     value="false" />
		<param name="odom0_nodelay"      value="true" />

		<!-- imu0 (IMU attached to Jetson via USB): 
			 roll, pitch, yaw, x-acc, y-acc, z-acc -->
		<!-- probably won't use roll or pitch but no harm fusing them -->
		<param name="imu0" value="/imu/zeroed_imu_overridden" />
		<rosparam param="imu0_config"> [false, false, false,
                                        true, true, true,
                                        false, false, false,
                                        false, false, false,
                                        true, true, true]
        </rosparam>
		<param name="imu0_differential" value="false"/>
		<param name="imu0_relative"     value="false" />
		<param name="imu0_nodelay"      value="true" />
		<param name="imu0_remove_gravitational_acceleration" value="false" />
<!-- 
		<param name="imu1" value="/zed_objdetect/imu/data" />
		<rosparam param="imu1_config"> [false, false, false,
                                        false, false, false,
                                        false, false, false,
                                        false, false, false,
                                        false, false, false]
        </rosparam>
		<param name="imu1_differential" value="false"/>
		<param name="imu1_relative"     value="true" />
		<param name="imu1_nodelay"      value="true" />
		<param name="imu1_remove_gravitational_acceleration" value="false" /> -->
		
		<param name="print_diagnostics" value="true"/>
		<param name="debug" value="true"/>
		

		<!-- ZED -->
		<param name="odom1" value="/zed_objdetect/odom_overridden" />
		<rosparam param="odom1_config"> [true,  true,  false,
                                         false, false, false, 
                                         false, false, false,
                                         false, false, false,
                                         false, false, false]
        </rosparam>
		<param name="odom1_differential" value="false" />
		<param name="odom1_relative"     value="true" />
		<param name="odom1_nodelay"      value="true" />

		<!-- x, y, z, r, p, y, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az --> 
        <rosparam param="process_noise_covariance"> [0.2, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0.2, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0.0, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0.03, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0.03, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0.06, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0.025, 0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0.025, 0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0.04, 0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.02, 0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]
        </rosparam>
	</node>
</launch>
