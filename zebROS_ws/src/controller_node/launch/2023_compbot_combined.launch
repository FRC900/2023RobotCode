<?xml version="1.0"?>
<!-- Launches both Rio and Jetson code -->
<launch>

	<!-- GDB functionality -->
	<arg name="debug" default="false" />
	<arg unless="$(arg debug)" name="launch_prefix" value="" />
	<arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

	<arg name="hw_or_sim" default="hw" />
	<arg name="joy_or_key" default="joy" />
	<arg name="button_box" default="true"/>
	<arg name="record" default="false"/>

    <!-- Jetson Nodes -->
    <include file="$(find controller_node)/launch/2023_compbot_jetson.launch" pass_all_args="true"/>

	<include file="$(find controller_node)/launch/joysticks_sim.launch" if="$(eval arg('hw_or_sim')=='sim')">
		<arg name="joy_or_key" value="$(arg joy_or_key)" />
		<arg name="button_box" value="$(arg button_box)" />
	</include>

    <!-- RIO Nodes -->
	<!-- For hw, run the Rio stuff on the Rio.
		 For sim, run both it and the jetson sim on the same machine. This
		 is an awful hack but seems to work? -->
	<group if="$(eval arg('hw_or_sim')=='hw')">
		<machine name="roboRIO" address="10.9.0.2" env-loader="/home/admin/2022RobotCode/zebROS_ws/ROSJetsonMaster.sh" user="admin" password="admin" default="true" timeout="30"/>
	</group>

    <include file="$(find controller_node)/launch/2023_compbot_rio.launch" pass_all_args="true"/>

    <!-- If you want to include a second Jetson, create a new launch file for it and uncomment these lines: -->
    <!-- Jetson 2 Nodes -->
    <!-- <machine name="jetson_2" address="10.9.0.9" env-loader="/home/ubuntu/2022RobotCode/zebROS_ws/ROSJetsonMaster.sh" user="ubuntu" password="ubuntu" default="true"/>
    <include file="$(find behaviors)/launch/jetson2_sensor_nodes.launch"/> -->

	<group if="$(eval arg('hw_or_sim')=='hw')">
		<machine name="jetson2" address="10.9.0.9" env-loader="/home/ubuntu/2022RobotCode/zebROS_ws/ROSJetsonMaster.sh" user="ubuntu" password="ubuntu" default="true" timeout="30"/>
	</group>

    <include file="$(find controller_node)/launch/2023_compbot_jetson2.launch" pass_all_args="true"/>


</launch>
